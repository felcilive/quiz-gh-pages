!function(e){var t={};function r(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(n,s,function(t){return e[t]}.bind(null,s));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);r(1),r(5);var n=[{question:"Какое ключевое слово позволяет создавать объекты общего вида?",answers:["object","prototype","this"],correctAnswer:"object"},{question:"Объекты, отвечающие, что содержится на Web-странице в окне браузера называются:",answers:["Клиентские","Пользовательские","Встроенные"],correctAnswer:"Клиентские"},{question:"Можно ли из JavaScript получить содержимое комментария?",answers:["Да, комментарий – DOM-узел, можно получить.","Нет, комментарии есть в HTML, но отсутствуют в DOM.","Можно получить, но только до окончания загрузки страницы"],correctAnswer:"Да, комментарий – DOM-узел, можно получить."},{question:"Браузер вызывает setInterval и setTimeout гораздо реже, чем обычно, если…",answers:["Вкладка, в которой работает JavaScript, не видна и находится в фоновом режиме.","Посетитель зашёл с ноутбука, с питанием от батареи.","В обоих этих случаях."],correctAnswer:"В обоих этих случаях."},{question:"Чему равна сумма 1.15 + 2.30 с точки зрения JavaScript?",answers:["345","3.45","3,45","Ни один из вариантов выше."],correctAnswer:"Ни один из вариантов выше."},{question:"Есть ли разница между вызовами i++ и ++i?",answers:["Разница в значении, которое возвращает такой вызов.","Разница в значении i после вызова.","Нет никакой разницы."],correctAnswer:"Разница в значении, которое возвращает такой вызов."},{question:'Чему равно значение выражения 4 - "5" + 0xf - "1e1"?',answers:["Цифре.","Строке","NaN"],correctAnswer:"Цифре."},{question:'Чему равно 0 || "" || 2 || undefined || true || falsе ?',answers:['""',"2","undefined","true","false"],correctAnswer:"true"},{question:"Чему равно a: let a = (1,5 - 1) * 2;",answers:["0.999999999","1","0.5","8","-0.5","4"],correctAnswer:"8"},{question:"Что получится, если сложить true + false?",answers:['"truefalse"',"0","1","NaN"],correctAnswer:"1"},{question:"Чему равно такое выражение: [] + false - null + true",answers:["1","NaN","0","indefined"],correctAnswer:"NaN"}];class s{static getRandomInt(e,t){return Math.floor(Math.random()*(t-e))+e}static mixArray(e){const t=e.slice();let r,n;const i=t.length;for(let e=0;e<i;e+=1)n=t[r=s.getRandomInt(0,i)],t[r]=t[e],t[e]=n;return t}}var i=class{constructor(e){this.quizContainer=document.getElementById("quiz"),this.data=e}gameOver(e,t,r){this.quizContainer.innerHTML=`<div class='quiz__card'>\n    <div class='quiz__score'>${t} ${e}/${r}</div>\n    ${this.data.map(e=>`<div id='quiz__question' class='quiz__question'>${e.question}</div>\n      <div id='quiz__answers'>\n      <label class='quiz__answers__elem gradient correct_answer'>\n      <input type="radio" name="answer" value="${e.correctAnswer}">\n      </input>\n      ${e.correctAnswer}</label>\n      `).join(" ")}`}drawQuizCard(e,t){this.quizContainer.innerHTML=`\n    <div class='quiz__card'>\n    <div id='quiz__question' class='quiz__question'>${e}</div>\n    <div id='quiz__answers'>\n    ${t.map(e=>`\n        <label class='quiz__answers__elem gradient gradient-focus answer'>\n        <input type="radio" name="answer" value="${e}">\n        </input>\n        ${e}</label>\n        `).join(" ")}\n    </div>\n    </div>`}};var a=class{constructor(){this.indexForCurrentQuestion=null,this.correctAnswer=null,this.data=n,this.score=0,this.amountOfQuestions=this.data.length-1,this.answersHasListener=!1,this.resultArray=[]}getCurrentQuizCard(){this.indexForCurrentQuestion=s.getRandomInt(0,this.data.length-1);const e=this.data[this.indexForCurrentQuestion];return this.correctAnswer=e.correctAnswer,e}scoreCounter(e){e===this.correctAnswer&&(this.score+=1)}initListenerAnswers(){[...document.getElementsByTagName("input")].map(e=>e.addEventListener("click",this.runNextQuestionCard.bind(this),!1)),this.answersHasListener=!0}removeAnswersListenerIfTheyHave(){if(this.answersHasListener){[...document.getElementsByTagName("input")].map(e=>e.removeEventListener("click",this.runNextQuestionCard.bind(this),!1)),this.answersHasListener=!1}}markAnsweredQuestion(){this.data.splice(this.indexForCurrentQuestion,1)}checkKnowledge(){switch(this.score){case 0:case 1:case 2:return"Очень слабо";case 3:case 4:return"Плохо";case 5:return"Довольно";case 6:return"Средне";case 7:return"Хорошо";case 8:return"Очень хорошо";case 9:return"Отлично";default:return"Превосходно"}}allQuestionIsAnswered(){return 0===this.data.length&&(this.removeAnswersListenerIfTheyHave(),this.resultArray.pop(),!0)}copyResultArray(e,t){this.resultArray.push({question:e,answers:t,correctAnswer:this.correctAnswer})}runNextQuestionCard(e){this.scoreCounter(e.target.value);const t=this.getCurrentQuizCard(),r=s.mixArray(t.answers);this.copyResultArray(t.question,r);const n=new i(this.resultArray);if(n.drawQuizCard(t.question,r),this.initListenerAnswers(),this.markAnsweredQuestion(),this.allQuestionIsAnswered()){const e=this.checkKnowledge();n.gameOver(this.score,e,this.amountOfQuestions)}}};(new class{constructor(){this.startQuizButton=document.getElementById("quiz__start")}initStartListener(){const e=new a;this.startQuizButton.addEventListener("click",e.runNextQuestionCard.bind(e),!1)}}).initStartListener()},function(e,t){},,,,function(e,t){}]);
//# sourceMappingURL=app.bundle.js.map